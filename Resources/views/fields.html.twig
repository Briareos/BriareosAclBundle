{% block role_permissions_widget %}
{% set tree_id = id~'-container' %}
<script>
    $(document).ready(function () {
        var treeContext, checkboxes;

        treeContext = $('#{{ tree_id }}');
        checkboxes = $('input[type="checkbox"]', treeContext).change(function (e) {
            var checked, childCheckboxes, parentCheckboxes;
            checked = $(this).prop('checked');
            childCheckboxes = $('ul input[type="checkbox"]', $(this).closest('li'));
            parentCheckboxes = $(this).closest('li').parentsUntil(treeContext, 'li').find('input[type="checkbox"]:first');

            // Cascade the checked/unchecked state to its children.
            childCheckboxes.prop('checked', checked);
            if (checked) {
                // Cascade the checked state to parents.
                parentCheckboxes.prop('checked', true);
            }
        });
    });
</script>
<div id="{{ tree_id }}">
    {{ _self.tree(form, tree, id) }}
</div>
{% endblock %}

{% macro tree(form, nodes, id) %}
{% spaceless %}
<ul {% if id is not empty%}id="{{ id }}" class="well-small" {% endif %}>
    {% for key, node in nodes %}
    <li class="checkbox">
        {{ form_widget(form[node.id]) }}
        {{ form_label(form[node.id]) }}
        {% if node.__children is not empty %}
        {{ _self.tree(form, node.__children) }}
        {% endif %}
    </li>
    {% endfor %}
</ul>
{% endspaceless %}
{% endmacro %}